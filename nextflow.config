// Copyright (c) 2025 Outbreak Preparedness and Response Group at BNITM
// This file is part of ViMOP and is licensed under the MIT License.
// See the LICENSE file in the root of this repository for full license details.

params {
    help = false
    version = false
    validate_params = true
    monochrome_logs = false
    schema = "nextflow_schema.json"
    schema_ignore_params = "show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf"
    show_hidden_params = false

    sample_sheet = null

    fastq = null
    out_dir = "output"
    trim_length = 30

    base_db = null
    virus_db = null
    virus_db_config = null
    contaminants_db = null
    contaminants_db_config = null
    classification_db = null
    classification_db_config = null

    // These should not be changed. Set the variables base_db,
    // virus_db, blast_db, contaminants_db or classification_db instead
    database_defaults = [
        base: "$HOME/ViMOP_DB",
        virus: "virus",
        virus_db_config: "virus.yaml",
        contaminants: "contaminants",
        contaminants_db_config: "contaminants.yaml",
        classification: "centrifuge",
        classification_db_config: "centrifuge.yaml",
    ]

    centrifuge_do_classify = true
    centrifuge_do_filter = true
    centrifuge_filter_min_score = 100
    centrifuge_plot_min_frac = 0.0002

    // contamination removal part of the workflow
    contamination_filters = "reagent,human_dna,human_rna"

    targets = ""  // e.g. "LCMV,MS2,LASV"
    assemble_notarget = true

    // assemble_canu parameters
    canu_min_read_length = 200
    canu_min_overlap_length = 200
    canu_read_sampling_bias = 5
    canu_genome_size = 30_000
    canu_max_input_coverage = 200
    canu_cor_out_coverage = 10_000
    canu_stop_on_low_coverage = 0
    canu_min_input_coverage = 0

    nocontigs_enable_read_usage = true
    nocontigs_max_reads_precluster = 10_000
    nocontigs_nreads = 100
    nocontigs_cdhit_thresh = 0.9
    nocontigs_cdhit_wordlen = 10

    reassemble_cdhit_thresh = 0.98
    reassemble_cdhit_wordlen = 10
    reassemble_max_iter = 2

    custom_ref_fasta = null

    map_to_target_minimap_window_size = 5
    map_to_target_minimap_kmer_size = 11

    consensus_method = "auto"
    medaka_consensus_model = "auto"
    consensus_min_depth = 20
    consensus_min_share = 0.7

    // TODO: this is yet experimental, therefore hidden in schema
    consensus_max_variant_calling_iterations = 2
    consensus_homopolymer_masking_max_del = 2
    consensus_homopolymer_masking_min_length = 5

    sniffles_do_call_structural_variants = true
    sniffles_min_variant_allele_fraction = 0.7
    sniffles_min_support = 20
    sniffles_min_sv_len = 30

    // advance output
    output_cleaned_reads = false

    // ressource parameters
    min_disk_space_work_gb = 100
    min_disk_space_out_gb = 10
    min_ram_gb = 30
    min_cpus = 16

    download_db_min_disk_space_work_gb = 100
    download_db_min_disk_space_home_gb = 100
    download_db_min_ram_gb = 16
    download_db_min_cpus = 1

    download_db_all = false
    download_db_centrifuge = false
    download_db_contamination = false
    download_db_virus = false
    download_db_update_existing = false

    download_db_config_url = "https://opr.bnitm.de/vimop_db/latest.yaml"

    wf {
        agent = null
        example_cmd = [
            "--fastq 'fastq_dir/barcode01'",
        ]
    }
}

// create performance report
report {
    enabled = true
    file = "${params.out_dir}/nf-report-${new Date().format('yyyyMMdd_HHmmss')}.html"
    overwrite = true
}

manifest {
    name            = 'OPR-group-BNITM/ViMOP'
    author          = 'Outbreak Preparedness and Response team at Bernhard Nocht Institute for Tropical Medicine'
    homePage        = 'https://github.com/OPR-group-BNITM/vimop'
    description     = 'Reference based virus assembly with automatic reference selection from ONT reads.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v0.0.1'
}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }
}

dockerUser = 'oprgroup'

process {
    cleanup = true

    withLabel:general {
        container = "${dockerUser}/general:0.0.1"
    }
    withLabel:download {
        container = "${dockerUser}/general:0.0.1"
        maxForks = 1
    }
    withLabel:ingress {
        container = "${dockerUser}/ingress:0.0.1"
    }
    withLabel:centrifuge {
        container = "${dockerUser}/centrifuge:0.0.1"
    }
    withLabel:canu {
        container = "${dockerUser}/canu:0.0.1"
    }
    withLabel:medaka {
        container = "${dockerUser}/medaka:0.0.1"
    }
    withLabel:report {
        container = "${dockerUser}/report:0.0.1"
    }
}
